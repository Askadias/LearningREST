<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns='http://www.springframework.org/schema/beans'
       xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <bean id="ru.forxy.common.support.Configuration.performance" class="ru.forxy.common.support.Configuration">
        <property name="settings">
            <map key-type="java.lang.Object" value-type="java.lang.String">
                <entry key="#{T(ru.forxy.common.logging.LoggingServletFilter$Configs).IsHttpInfoLoggingEnabled}"
                       value="true"/>
                <entry key="#{T(ru.forxy.common.logging.AbstractPerformanceLogger$Configs).IsPayloadLoggingEnabled}"
                       value="true"/>
                <entry key="#{T(ru.forxy.common.logging.AbstractPerformanceLogger$Configs).IsPerformanceLoggingEnabled}"
                       value="true"/>
            </map>
        </property>
    </bean>

    <!-- ================= SERVICE ================================================================================= -->

    <bean id="ru.forxy.common.support.Configuration.performance.endpoint" class="ru.forxy.common.support.Configuration"
          parent="ru.forxy.common.support.Configuration.performance">
        <property name="settings">
            <map key-type="java.lang.Object" value-type="java.lang.String" merge="true">
                <entry key="#{T(ru.forxy.common.logging.support.Fields).ActivityName}" value="endpoint"/>
            </map>
        </property>
    </bean>

    <bean id="ru.forxy.fraud.performance.logger.request"
          class="ru.forxy.common.logging.writer.LogWriter" c:name="fraud.performance.request"/>
    <bean id="ru.forxy.fraud.performance.logger.response"
          class="ru.forxy.common.logging.writer.LogWriter" c:name="fraud.performance.response"/>

    <bean id="ru.forxy.fraud.service.performance.loggingFilter"
          class="ru.forxy.common.logging.LoggingServletFilter"
          p:configuration-ref="ru.forxy.common.support.Configuration.performance.endpoint"
          p:requestWriter-ref="ru.forxy.fraud.performance.logger.request"
          p:responseWriter-ref="ru.forxy.fraud.performance.logger.response">
        <property name="requestFieldExtractors">
            <bean class="ru.forxy.common.logging.extractor.SpringELFieldExtractor">
                <property name="extractRules">
                    <map>
                        <entry key="Fraudname"
                               value="#request.getParameter('client_id')?:#requestHeaders['client-id']?:null"/>
                        <entry key="TransactionGUID"
                               value="#request.getParameter('transaction_guid')?:#requestHeaders['transaction-guid']?:null"/>
                        <entry key="MessageGUID"
                               value="#request.getParameter('message_guid')?:#requestHeaders['message-guid']?:null"/>
                        <entry key="OperationName" value="#request.requestURI.matches('.*/transactions[/\d+]+') and #request.getMethod().equals('GET') ? 'GetTransactionsPage' :
                                                          #request.requestURI.matches('.*/transaction/?') and #request.getMethod().equals('GET') ? 'GetTransaction' :
                                                          #request.requestURI.matches('.*/?') and #request.getMethod().equals('GET') ? 'FraudCheck' :
                                                          #request.requestURI.matches('.*/status/?') and #request.getMethod().equals('GET') ? 'SystemStatus' :
                                                          null"/>
                    </map>
                </property>
            </bean>
        </property>
        <property name="responseFieldExtractors">
            <bean class="ru.forxy.common.logging.extractor.SpringELFieldExtractor">
                <property name="extractRules">
                    <map>
                        <entry key="TransactionGUID" value="#responseHeaders['Transaction-GUID']"/>
                        <entry key="MessageGUID" value="#responseHeaders['Message-GUID']"/>
                        <entry key="FraudEmail"
                               value="#payload.indexOf('&quot;email&quot;')&gt;=0 ? #payload.replaceAll('.*?&quot;email&quot;:\s*?&quot;([a-zA-Z0-9!#$%&amp;''*+/=?^_`{|}~-]+(\.[a-zA-Z0-9!#$%&amp;''*+/=?^_`{|}~-]+)*@[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*)&quot;.*','$1') : null"/>
                        <entry key="StatusCode">
                            <value>(#response.responseStatus==200 or #response.responseStatus==201 or
                                #response.responseStatus==204) ? '0' :
                                #response.responseStatus==400 ? '-1' :
                                #response.responseStatus==500 ? #payload.replaceAll('.*?"code":\s*"?(\d+).*','$1') :
                                #response.responseStatus
                            </value>
                        </entry>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- ================= DAO ===================================================================================== -->

    <bean id="ru.forxy.common.support.Configuration.performance.dao" class="ru.forxy.common.support.Configuration"
          parent="ru.forxy.common.support.Configuration.performance"/>

    <bean id="ru.forxy.common.logging.exceptions.DatabaseExceptionHandler"
          class="ru.forxy.common.logging.exceptions.DatabaseExceptionHandler"
          p:databaseHost="${ru.forxy.fraud.MongoTemplate/host}:${ru.forxy.fraud.MongoTemplate/port}"/>

    <bean id="ru.forxy.fraud.performance.logger.dao"
          class="ru.forxy.common.logging.writer.LogWriter" c:name="fraud.performance.dao"/>

    <bean id="payment.scoring.performance.dao.loggingInterceptor"
          class="ru.forxy.common.logging.LoggingInterceptor"
          p:configuration-ref="ru.forxy.common.support.Configuration.performance.dao"
          p:responseWriter-ref="ru.forxy.fraud.performance.logger.dao"
          p:exceptionHandler-ref="ru.forxy.common.logging.exceptions.DatabaseExceptionHandler"/>

    <bean id="ru.forxy.fraud.db.dao.FraudDAO.mongo" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:proxyInterfaces="ru.forxy.fraud.db.dao.IFraudDAO"
          p:target-ref="ru.forxy.fraud.db.dao.FraudDAO.impl.mongo">
        <property name="interceptorNames">
            <list>
                <idref bean="payment.scoring.performance.dao.loggingInterceptor"/>
            </list>
        </property>
    </bean>

    <!--<bean id="ru.forxy.fraud.db.dao.FraudDAO.cassandra" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:proxyInterfaces="ru.forxy.fraud.db.dao.IFraudDAO"
          p:target-ref="ru.forxy.fraud.db.dao.FraudDAO.impl.cassandra">
        <property name="interceptorNames">
            <list>
                <idref bean="payment.scoring.performance.dao.loggingInterceptor"/>
            </list>
        </property>
    </bean>-->

    <!-- ================= IMPLEMENTATION ========================================================================== -->

    <bean id="ru.forxy.common.support.Configuration.performance.impl" class="ru.forxy.common.support.Configuration"
          parent="ru.forxy.common.support.Configuration.performance"/>

    <bean id="ru.forxy.common.logging.exceptions.ServiceExceptionHandler"
          class="ru.forxy.common.logging.exceptions.ServiceExceptionHandler"/>

    <bean id="ru.forxy.fraud.performance.logger.service.impl"
          class="ru.forxy.common.logging.writer.LogWriter" c:name="fraud.performance.service.impl"/>

    <bean id="payment.scoring.performance.service.impl.loggingInterceptor"
          class="ru.forxy.common.logging.LoggingInterceptor"
          p:configuration-ref="ru.forxy.common.support.Configuration.performance.impl"
          p:responseWriter-ref="ru.forxy.fraud.performance.logger.service.impl"
          p:exceptionHandler-ref="ru.forxy.common.logging.exceptions.ServiceExceptionHandler"/>

    <bean id="ru.forxy.fraud.logic.FraudServiceFacade" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:proxyInterfaces="ru.forxy.fraud.logic.IFraudServiceFacade"
          p:target-ref="ru.forxy.fraud.logic.FraudServiceFacade.impl">
        <property name="interceptorNames">
            <list>
                <idref bean="payment.scoring.performance.service.impl.loggingInterceptor"/>
            </list>
        </property>
    </bean>
</beans>