// ========== Deploy ====================================================

buildscript {
    repositories {
        maven {
            url uri("file://$System.env.OUTPUT_ROOT/deliverables/")
        }
    }
    dependencies {
        classpath "forxy:ru.forxy.common.deploy:$rev_forxy_common"
    }
}

apply plugin: 'deploy'

deploy {
    serviceName = 'FraudService'
    basePort = 12000
    useSSL = true
    keyAlias = 'oauth'
    keystoreFile = 'conf/FraudService/appconfig/oauth.jks'
    keystorePass = '5ecret0AUTHPa55word'
    truststoreFile = 'conf/FraudService/appconfig/oauth.jks'
    truststorePass = '5ecret0AUTHPa55word'
    configIncludes = ['**/*.drl']
}

// ========== Dependencies ==============================================

dependencies {
    // --------------------- FORXY ---------------------------------------
    compile project(":ru.forxy.fraud.api")
    compile "forxy:ru.forxy.common.rest:${rev_forxy_common}"
    compile "forxy:ru.forxy.common.utils:${rev_forxy_common}"
    compile "forxy:ru.forxy.common.status:${rev_forxy_common}"
    compile "forxy:ru.forxy.common.logging:${rev_forxy_common}"

    // --------------------- CXF -----------------------------------------
    compile "org.apache.cxf:cxf-rt-frontend-jaxrs:${rev_cxf}"
    compile "org.apache.cxf:cxf-rt-rs-service-description:${rev_cxf}"

    // --------------------- JAX-WS --------------------------------------
    compile "org.apache.cxf:cxf-rt-frontend-jaxws:${rev_cxf}"
    compile "org.apache.cxf:cxf-rt-transports-http:${rev_cxf}"

    // --------------------- COMMON --------------------------------------
    compile "commons-collections:commons-collections:${rev_common_collections}"
    compile "ch.qos.logback:logback-core:${rev_logback}"
    compile "quartz:quartz:${rev_quartz}"

    // --------------------- MONGO ---------------------------------------
    compile "org.mongodb:mongo-java-driver:${rev_mongo}"
    //compile "org.springframework.data:spring-data-mongodb:${rev_spring_data_mongo}"

    // --------------------- CASSANDRA -----------------------------------
    //compile "com.datastax.cassandra:cassandra-driver-core:${rev_cassandra_datastax}"
    //compile "com.datastax.cassandra:cassandra-driver-mapping:${rev_cassandra_datastax}"
    compile "com.valchkou.datastax:cassandra-driver-mapping:${rev_cassandra_jpa}"

    // --------------------- SPRING --------------------------------------
    compile "org.springframework:spring-core:${rev_spring}"
    compile "org.springframework:spring-beans:${rev_spring}"
    compile "org.springframework:spring-context:${rev_spring}"
    compile "org.springframework:spring-context-support:${rev_spring}"
    compile "org.springframework:spring-aop:${rev_spring}"
    compile "org.springframework:spring-web:${rev_spring}"
    compile "org.springframework:spring-orm:${rev_spring}"

    // --------------------- ENCRYPTION ----------------------------------
    compile "org.jasypt:jasypt:${rev_jasypt}"
    compile "org.jasypt:jasypt-spring3:${rev_jasypt}"

    // --------------------- DROOLS --------------------------------------
    compile "org.drools:drools-core:${rev_drools}"
    compile "org.drools:drools-compiler:${rev_drools}"
    compile "org.drools:drools-spring:${rev_drools}"

    // --------------------- JSON ----------------------------------------
    // for currency exchange rates parsing
    compile "org.json:json:${rev_org_json}"

    // ===================== TEST ========================================
    testCompile "org.springframework:spring-test:${rev_spring}"
    testCompile "junit:junit:${rev_junit}"
    testCompile "org.easymock:easymock:${rev_easymock}"
    testCompile "forxy:ru.forxy.common.test.utils:${rev_forxy_common}"
}
