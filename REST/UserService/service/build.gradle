apply plugin: 'java'
apply plugin: 'war'

sourceSets {
    main {
        java { srcDir 'src/main' }
        resources { srcDir 'src/main' }
    }
    test {
        java { srcDir 'src/test' }
        resources { srcDir 'src/test' }
    }
}

// ========= Environment ================================================

import org.apache.tools.ant.filters.ReplaceTokens

if (project.hasProperty('env')) {
    def env = project.getProperty("env")

    task copyEnvConfigApp(type: Copy) {
        from 'appconfig'
        into "$System.env.TOMCAT_HOME/conf/appconfig"
        include '**/*.properties'
        include '**/*.xml'
        exclude '**/*.bat'
        exclude '**/*.sh'
    }

    task copyEnvConfigTomcat(type: Copy) {
        from "appconfig/env/$env"
        into "$System.env.TOMCAT_HOME/bin"
        include '**/*.bat'
        include '**/*.sh'
    }

    task copyWebContextConfig(type: Copy) {
        from "appconfig/UserService.xml"
        into "$System.env.TOMCAT_HOME/conf/Catalina/localhost"
        filter(ReplaceTokens, tokens: [war: war.archiveName])
    }

    task setupEnv {
        dependsOn copyEnvConfigApp, copyEnvConfigTomcat, copyWebContextConfig
    }
}

// ========== Deploy ====================================================
war {
    manifest {
        attributes(
                'Product': rootProject.name,
                'Version': version,
                'Built-On': new Date().format('yyyy-mm-dd HH:MM:ss')
        )
    }
}

task deploy(type: Copy) {
    dependsOn war
    if (project.hasProperty('env')) {
        dependsOn setupEnv
    }
    from war
    into "$System.env.TOMCAT_HOME/warfiles"
}

// ========== Clean Deployment Configuration ============================

task cleanTomcat(type: Delete) {
    FileTree tree = fileTree("$System.env.TOMCAT_HOME") {
        include "conf/Catalina/localhost/UserService.xml",
                "warfiles/ru.forxy.user*.war",
                "conf/appconfig/**/ru.forxy.user*.properties"
    }
    delete tree
}

// ========== Dependencies ==============================================

dependencies {
    // --------------------- FORXY ---------------------------------------
    compile project(":ru.forxy.user.api")
    compile "forxy:ru.forxy.common.support:${rev_forxy_common}"

    // --------------------- COMMON --------------------------------------
    compile "commons-collections:commons-collections:${rev_common_collections}"
    compile "ch.qos.logback:logback-core:${rev_logback}"
    compile "ch.qos.logback:logback-classic:${rev_logback}"
    compile "org.slf4j:slf4j-api:${rev_slf4j}"

    // --------------------- MONGO ---------------------------------------
    compile "org.mongodb:mongo-java-driver:${rev_mongo}"
    compile "org.springframework.data:spring-data-mongodb:${rev_spring_mongo}"

    // --------------------- CASSANDRA -----------------------------------
    //compile "org.apache.cassandra:cassandra-all:${rev_cassandra}"
    compile ("com.impetus.client:kundera-cassandra:${rev_kundera_cassandra}") {
        exclude module: 'scale7-pelops'
        exclude module: 'scale7-core'
        exclude module: 'snappy'
        exclude module: 'persistence-api'
        exclude module: 'slf4j-log4j12'
        exclude module: 'log4j'
    }

    compile "org.hibernate.javax.persistence:hibernate-jpa-2.0-api:${rev_persistance}"
    compile "org.xerial.snappy:snappy-java:${rev_snappy}"
    compile "com.github.stephenc.scale7:scale7-pelops:${rev_scale7_pelops}"
    compile "com.github.stephenc.scale7:scale7-core:${rev_scale7_core}"

    // --------------------- SPRING --------------------------------------
    compile "org.springframework:spring-core:${rev_spring}"
    compile "org.springframework:spring-beans:${rev_spring}"
    compile "org.springframework:spring-context:${rev_spring}"
    compile "org.springframework:spring-web:${rev_spring}"

    // ===================== TEST ========================================
    testCompile "org.springframework:spring-test:${rev_spring}"
    testCompile "junit:junit:${rev_junit}"
    testCompile "org.easymock:easymock:${rev_easymock}"
}

eclipse {
    project { name = 'ru.forxy.user.service' }
}