apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'tomcat'

sourceSets {
    main {
        java { srcDir 'src/main' }
        resources { srcDir 'src/main' }
    }
    test {
        java { srcDir 'src/test' }
        resources { srcDir 'src/test' }
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.gradle.api.plugins:gradle-tomcat-plugin:${rev_tomcat_plugin}"
    }
}


// ========= Tomcat Plugin ==============================================

tomcatRunWar { contextPath = 'UserService' }


// ========= Environment ================================================

import org.apache.tools.ant.filters.ReplaceTokens

if (project.hasProperty('env')) {
    def env = project.getProperty("env")

    task copyEnvConfigApp(type: Copy) {
        from 'appconfig'
        into "$System.env.TOMCAT_HOME/conf/appconfig"
        include '**/*.properties'
        exclude '**/*.bat'
    }

    task copyEnvConfigTomcat(type: Copy) {
        from "appconfig/env/$env/setenv.bat"
        into "$System.env.TOMCAT_HOME/bin"
    }

    task copyWebContextConfig(type: Copy) {
        from "appconfig/UserService.xml"
        into "$System.env.TOMCAT_HOME/conf/Catalina/localhost"
        filter(ReplaceTokens, tokens: [war: war.archiveName])
    }

    task setupEnv {
        dependsOn copyEnvConfigApp,copyEnvConfigTomcat,copyWebContextConfig
    }
}


// ========== Deploy ====================================================

task deploy(type: Copy) {
    dependsOn war
    if (project.hasProperty('env')) {
        dependsOn setupEnv
    }
    from war
    into "$System.env.TOMCAT_HOME/warfiles"
}


// ========== Clean Deployment Configuration ============================

task cleanTomcat(type: Delete) {
    FileTree tree = fileTree("$System.env.TOMCAT_HOME") {
        include "conf/Catalina/localhost/UserService.xml",
                "warfiles/ru.forxy.user*.war",
                "conf/appconfig/**/ru.forxy.user*.properties"
    }
    delete tree
}


// ========== Dependencies ==============================================

dependencies {
    // --------------------- PROJECTS ------------------------------------
    compile project(":ru.forxy.user.api")

    // --------------------- COMMON --------------------------------------
    compile "commons-collections:commons-collections:${rev_common_collections}"
    compile "ch.qos.logback:logback-core:${rev_logback}"
    compile "ch.qos.logback:logback-classic:${rev_logback}"
    compile "org.slf4j:slf4j-api:${rev_slf4j}"

    // --------------------- SPRING --------------------------------------
    compile "org.springframework:spring-core:${rev_spring}"
    compile "org.springframework:spring-beans:${rev_spring}"
    compile "org.springframework:spring-context:${rev_spring}"
    compile "org.springframework:spring-web:${rev_spring}"
    compile "org.springframework:spring-test:${rev_spring}"

    // ===================== TEST ========================================
    testCompile "junit:junit:${rev_junit}"

    // ===================== TOMCAT ======================================
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${rev_tomcat}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${rev_tomcat}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${rev_tomcat}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
}

eclipse {
    project { name = 'ru.forxy.user.service' }
}