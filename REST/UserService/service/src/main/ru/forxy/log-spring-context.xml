<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns='http://www.springframework.org/schema/beans'
       xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation='http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd'>

    <bean id="ru.forxy.common.utils.Configuration.performance"
          parent="ru.forxy.common.utils.Configuration"
          p:payloadLoggingEnabled="true"
          p:httpInfoLoggingEnabled="true"
          p:performanceLoggingEnabled="true">
        <constructor-arg>
            <map>
                <entry key="ActivityName" value="endpoint"/>
            </map>
        </constructor-arg>
    </bean>

    <!-- ================= SERVICE ======================================================================================== -->

    <bean id="ru.forxy.user.performance.logger.request"
          class="ru.forxy.common.logging.writer.LogWriter" c:name="user.performance.request"/>
    <bean id="ru.forxy.user.performance.logger.response"
          class="ru.forxy.common.logging.writer.LogWriter" c:name="user.performance.response"/>

    <bean id="ru.forxy.user.service.performance.loggingFilter"
          class="ru.forxy.common.logging.LoggingServletFilter"
          p:configuration-ref="ru.forxy.common.utils.Configuration.performance"
          p:requestWriter-ref="ru.forxy.user.performance.logger.request"
          p:responseWriter-ref="ru.forxy.user.performance.logger.response">
        <property name="requestFieldExtractors">
            <bean class="ru.forxy.common.logging.metadata.SpelFieldExtractor">
                <property name="extractRules">
                    <map>
                        <entry key="Username"
                               value="#request.getParameter('client_id')?:#requestHeaders['client-id']?:null"/>
                        <entry key="TransactionGUID"
                               value="#request.getParameter('transaction_guid')?:#requestHeaders['transaction-guid']?:null"/>
                        <entry key="MessageGUID"
                               value="#request.getParameter('message_guid')?:#requestHeaders['message-guid']?:null"/>
                        <entry key="OperationName" value="#request.requestURI.matches('.*/users[/\d+]+') and #request.getMethod().equals('GET') ? 'GetUsersPage' :
                                                          #request.requestURI.matches('.*/users/login/?') and #request.getMethod().equals('POST') ? 'Login' :
                                                          #request.requestURI.matches('.*/users/?') and #request.getMethod().equals('GET') ? 'GetUser' :
                                                          #request.requestURI.matches('.*/users/?') and #request.getMethod().equals('POST') ? 'UpdateUser' :
                                                          #request.requestURI.matches('.*/users/?') and #request.getMethod().equals('DELETE') ? 'DeleteUser' :
                                                          #request.requestURI.matches('.*/status/?') and #request.getMethod().equals('GET') ? 'SystemStatus' :
                                                          null"/>
                    </map>
                </property>
            </bean>
        </property>
        <property name="responseFieldExtractors">
            <bean class="ru.forxy.common.logging.metadata.SpelFieldExtractor">
                <property name="extractRules">
                    <map>
                        <entry key="TransactionGUID" value="#responseHeaders['Transaction-GUID']"/>
                        <entry key="MessageGUID" value="#responseHeaders['Message-GUID']"/>
                        <entry key="UserEmail"
                               value="#payload.indexOf('&quot;email&quot;')&gt;=0 ? #payload.replaceAll('.*?&quot;email&quot;:\s*?&quot;([a-zA-Z0-9!#$%&amp;''*+/=?^_`{|}~-]+(\.[a-zA-Z0-9!#$%&amp;''*+/=?^_`{|}~-]+)*@[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*)&quot;.*','$1') : null"/>
                        <entry key="StatusCode">
                            <value>(#response.responseStatus==200 or #response.responseStatus==201 or
                                #response.responseStatus==204) ? '0' :
                                #response.responseStatus==400 ? '-1' :
                                #response.responseStatus==500 ? #payload.replaceAll('.*?"code":\s*"?(\d+).*','$1') :
                                #response.responseStatus
                            </value>
                        </entry>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <!-- ================= DAO ============================================================================================ -->

    <bean id="ru.forxy.user.performance.logger.dao"
          class="ru.forxy.common.logging.writer.LogWriter" c:name="user.performance.dao"/>

    <bean id="payment.scoring.performance.dao.loggingInterceptor"
          class="ru.forxy.common.logging.LoggingInterceptor"
          p:configuration-ref="ru.forxy.common.utils.Configuration.performance"
          p:responseWriter-ref="ru.forxy.user.performance.logger.dao"/>

    <bean id="ru.forxy.db.dao.mongo.UserDAO" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:proxyInterfaces="ru.forxy.db.dao.IUserDAO"
          p:target-ref="ru.forxy.db.dao.mongo.UserDAO.impl">
        <property name="interceptorNames">
            <list>
                <idref bean="payment.scoring.performance.dao.loggingInterceptor"/>
            </list>
        </property>
    </bean>
</beans>