apply plugin: 'java'
apply plugin: 'maven'

group = "forxy"

jar { from sourceSets.main.allJava }

test {
    reports.html.enabled = true
    maxParallelForks = 8
    maxHeapSize = "1024m"
    jvmArgs '-XX:MaxPermSize=256m', '-XX:+HeapDumpOnOutOfMemoryError'
    if (project.hasProperty('env')) {
        systemProperty 'env', "${env}"
    } else {
        systemProperty 'env', "dev"
    }
    if (project.hasProperty('threads')) {
        systemProperty 'threads', "${threads}"
    } else {
        systemProperty 'threads', "4"
    }
    if (project.hasProperty('iterations')) {
        systemProperty 'iterations', "${iterations}"
    } else {
        systemProperty 'iterations', "1000"
    }
}

task includeDVTTests() << {
    project.tasks.test.scanForTestClasses = false
    project.tasks.test.includes = [
            '**/dvt/*Test.class'
    ]
}

task includeStressTests() << {
    project.tasks.test.scanForTestClasses = false
    project.tasks.test.includes = [
            '**/stress/*Test.class'
    ]
}

if (System.env.OUTPUT_ROOT) {
    buildDir = file("$System.env.OUTPUT_ROOT/$project.name")
}

repositories {
    mavenCentral()
    ivy { url "file://$System.env.OUTPUT_ROOT/deliverables/" }

    uploadArchives { repositories { ivy { url "file://$System.env.OUTPUT_ROOT/deliverables/" } } }
}

dependencies {
    // --------------------- FORXY ---------------------------------------
    compile "forxy:ru.forxy.crypto.api:${rev_forxy_crypto}"
    compile "forxy:ru.forxy.user.api:${rev_forxy_user}"
    compile "forxy:ru.forxy.photo.api:${rev_forxy_photo}"
    compile "forxy:ru.forxy.common.utils:${rev_forxy_common}"

    // --------------------- JSON ----------------------------------------
    compile "org.codehaus.jackson:jackson-jaxrs:${rev_jackson}"
    compile "org.codehaus.jackson:jackson-core-asl:${rev_jackson}"

    // --------------------- COMMON --------------------------------------
    compile "commons-collections:commons-collections:${rev_commons_collections}"
    compile "commons-pool:commons-pool:${rev_commons_pool}"

    compile "ch.qos.logback:logback-core:${rev_logback}"
    compile "ch.qos.logback:logback-classic:${rev_logback}"
    compile "org.slf4j:slf4j-api:${rev_slf4j}"

    // --------------------- CXF -----------------------------------------
    compile "org.apache.cxf:cxf-bundle-jaxrs:${rev_cxf}"

    // --------------------- SPRING --------------------------------------
    compile "org.springframework:spring-core:${rev_spring}"
    compile "org.springframework:spring-beans:${rev_spring}"
    compile "org.springframework:spring-context:${rev_spring}"
    compile "org.springframework:spring-web:${rev_spring}"
    compile "org.springframework:spring-test:${rev_spring}"
    compile "org.springframework.data:spring-data-commons:${rev_spring_data}"

    // ===================== TEST ========================================
    compile "junit:junit:${rev_junit}"
}