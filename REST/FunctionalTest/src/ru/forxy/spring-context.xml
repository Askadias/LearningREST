<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:http="http://cxf.apache.org/transports/http/configuration"
       xmlns:sec="http://cxf.apache.org/configuration/security"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans            http://www.springframework.org/schema/beans/spring-beans.xsd
         http://cxf.apache.org/transports/http/configuration    http://cxf.apache.org/schemas/configuration/http-conf.xsd
         http://cxf.apache.org/configuration/security           http://cxf.apache.org/schemas/configuration/security.xsd
         http://www.springframework.org/schema/context          http://www.springframework.org/schema/context/spring-context.xsd http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd"
       default-lazy-init="false">

    <context:property-placeholder local-override="true" ignore-resource-not-found="true" order="2"
                                  location="classpath:appconfig/base/ru.forxy.test.properties"/>
    <context:property-placeholder local-override="true" ignore-resource-not-found="true" order="1"
                                  location="classpath:appconfig/env/${env}/ru.forxy.test.properties"/>

    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>


    <!-- =======================================
          Crypto Service Client Configuration
         =======================================  -->

    <http:conduit name="{http://crypto.forxy.ru/}ICryptoService.http-conduit">
        <http:tlsClientParameters>
            <sec:keyManagers keyPassword="${ru.forxy.crypto.SSLConfig/keyStorePassword}">
                <sec:keyStore type="${ru.forxy.crypto.SSLConfig/keyStoreType}"
                              password="${ru.forxy.crypto.SSLConfig/keyStorePassword}"
                              resource="${ru.forxy.crypto.SSLConfig/keyStoreFile}"/>
            </sec:keyManagers>
            <sec:trustManagers>
                <sec:keyStore type="${ru.forxy.crypto.SSLConfig/trustStoreType}"
                              password="${ru.forxy.crypto.SSLConfig/trustStorePassword}"
                              resource="${ru.forxy.crypto.SSLConfig/trustStoreFile}"/>
            </sec:trustManagers>
            <sec:cipherSuitesFilter>
                <sec:include>.*_EXPORT_.*</sec:include>
                <sec:include>.*_EXPORT1024_.*</sec:include>
                <sec:include>.*_WITH_DES_.*</sec:include>
                <sec:include>.*_WITH_AES_.*</sec:include>
                <sec:include>.*_WITH_NULL_.*</sec:include>
                <sec:exclude>.*_DH_anon_.*</sec:exclude>
            </sec:cipherSuitesFilter>
        </http:tlsClientParameters>
        <http:client AutoRedirect="true" Connection="Keep-Alive"/>
    </http:conduit>

    <jaxrs:client id="cryptoServiceClient"
                  serviceClass="ru.forxy.crypto.ICryptoService"
                  address="${ru.forxy.crypto.ICryptoService/url}"/>


    <!-- =======================================
          JSON Configuration
         ======================================= -->

    <bean id="jsonProvider" class="org.codehaus.jackson.jaxrs.JacksonJsonProvider"/>


    <!-- =======================================
           User Service Client Configuration
         ======================================= -->

    <jaxrs:client id="userServiceClient"
                  serviceClass="ru.forxy.user.rest.IUserService"
                  address="${ru.forxy.user.rest.IUserService/url}">
        <jaxrs:providers>
            <ref bean="jsonProvider"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>

    <jaxrs:client id="systemStatusClient"
                  serviceClass="ru.forxy.common.service.ISystemStatusService"
                  address="${ru.forxy.user.rest.IUserService/url}">
        <jaxrs:providers>
            <ref bean="jsonProvider"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>


    <!-- =======================================
           Photo Service Client Configuration
         ======================================= -->

    <jaxrs:client id="photoServiceClient"
                  serviceClass="ru.forxy.photo.IPhotoService"
                  address="${ru.forxy.photo.IPhotoService/url}">
        <jaxrs:providers>
            <ref bean="jsonProvider"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>

</beans>